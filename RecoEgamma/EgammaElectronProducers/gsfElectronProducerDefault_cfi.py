import FWCore.ParameterSet.Config as cms

gsfElectronProducerDefault = cms.EDProducer('GsfElectronProducer',
  gsfElectronCoresTag = cms.InputTag('ecalDrivenGsfElectronCores'),
  vtxTag = cms.InputTag('offlinePrimaryVertices'),
  conversionsTag = cms.InputTag('allConversions'),
  gsfPfRecTracksTag = cms.InputTag('pfTrackElec'),
  barrelRecHitCollectionTag = cms.InputTag('ecalRecHit', 'EcalRecHitsEB'),
  endcapRecHitCollectionTag = cms.InputTag('ecalRecHit', 'EcalRecHitsEE'),
  seedsTag = cms.InputTag('ecalDrivenElectronSeeds'),
  beamSpotTag = cms.InputTag('offlineBeamSpot'),
  egmPFCandidatesTag = cms.InputTag('particleFlowEGamma'),
  useDefaultEnergyCorrection = cms.bool(True),
  useCombinationRegression = cms.bool(False),
  ecalDrivenEcalEnergyFromClassBasedParameterization = cms.bool(True),
  ecalDrivenEcalErrorFromClassBasedParameterization = cms.bool(True),
  applyPreselection = cms.bool(False),
  useEcalRegression = cms.bool(False),
  applyAmbResolution = cms.bool(False),
  ignoreNotPreselected = cms.bool(True),
  useGsfPfRecTracks = cms.bool(True),
  pureTrackerDrivenEcalErrorFromSimpleParameterization = cms.bool(True),
  ambSortingStrategy = cms.uint32(1),
  ambClustersOverlapStrategy = cms.uint32(1),
  fillConvVtxFitProb = cms.bool(True),
  resetMvaValuesUsingPFCandidates = cms.bool(False),
  recHitFlagsToBeExcludedBarrel = cms.required.vstring,
  recHitFlagsToBeExcludedEndcaps = cms.required.vstring,
  recHitSeverityToBeExcludedBarrel = cms.required.vstring,
  recHitSeverityToBeExcludedEndcaps = cms.required.vstring,
  checkHcalStatus = cms.bool(True),
  hbheRecHits = cms.InputTag('hbhereco'),
  recHitEThresholdHB = cms.vdouble(
    0,
    0,
    0,
    0
  ),
  recHitEThresholdHE = cms.vdouble(
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ),
  maxHcalRecHitSeverity = cms.int32(999999),
  hcalRun2EffDepth = cms.bool(False),
  trkIsol03Cfg = cms.PSet(
    barrelCuts = cms.PSet(
      minPt = cms.double(1),
      maxDR = cms.double(0.3),
      minDR = cms.double(0),
      minDEta = cms.double(0.005),
      maxDZ = cms.double(0.1),
      maxDPtPt = cms.double(-1),
      minHits = cms.int32(8),
      minPixelHits = cms.int32(1),
      allowedQualities = cms.required.vstring,
      algosToReject = cms.required.vstring
    ),
    endcapCuts = cms.PSet(
      minPt = cms.double(1),
      maxDR = cms.double(0.3),
      minDR = cms.double(0),
      minDEta = cms.double(0.005),
      maxDZ = cms.double(0.1),
      maxDPtPt = cms.double(-1),
      minHits = cms.int32(8),
      minPixelHits = cms.int32(1),
      allowedQualities = cms.required.vstring,
      algosToReject = cms.required.vstring
    )
  ),
  trkIsol04Cfg = cms.PSet(
    barrelCuts = cms.PSet(
      minPt = cms.double(1),
      maxDR = cms.double(0.3),
      minDR = cms.double(0),
      minDEta = cms.double(0.005),
      maxDZ = cms.double(0.1),
      maxDPtPt = cms.double(-1),
      minHits = cms.int32(8),
      minPixelHits = cms.int32(1),
      allowedQualities = cms.required.vstring,
      algosToReject = cms.required.vstring
    ),
    endcapCuts = cms.PSet(
      minPt = cms.double(1),
      maxDR = cms.double(0.3),
      minDR = cms.double(0),
      minDEta = cms.double(0.005),
      maxDZ = cms.double(0.1),
      maxDPtPt = cms.double(-1),
      minHits = cms.int32(8),
      minPixelHits = cms.int32(1),
      allowedQualities = cms.required.vstring,
      algosToReject = cms.required.vstring
    )
  ),
  trkIsolHEEP03Cfg = cms.PSet(
    barrelCuts = cms.PSet(
      minPt = cms.double(1),
      maxDR = cms.double(0.3),
      minDR = cms.double(0),
      minDEta = cms.double(0.005),
      maxDZ = cms.double(0.1),
      maxDPtPt = cms.double(-1),
      minHits = cms.int32(8),
      minPixelHits = cms.int32(1),
      allowedQualities = cms.required.vstring,
      algosToReject = cms.required.vstring
    ),
    endcapCuts = cms.PSet(
      minPt = cms.double(1),
      maxDR = cms.double(0.3),
      minDR = cms.double(0),
      minDEta = cms.double(0.005),
      maxDZ = cms.double(0.1),
      maxDPtPt = cms.double(-1),
      minHits = cms.int32(8),
      minPixelHits = cms.int32(1),
      allowedQualities = cms.required.vstring,
      algosToReject = cms.required.vstring
    )
  ),
  trkIsolHEEP04Cfg = cms.PSet(
    barrelCuts = cms.PSet(
      minPt = cms.double(1),
      maxDR = cms.double(0.3),
      minDR = cms.double(0),
      minDEta = cms.double(0.005),
      maxDZ = cms.double(0.1),
      maxDPtPt = cms.double(-1),
      minHits = cms.int32(8),
      minPixelHits = cms.int32(1),
      allowedQualities = cms.required.vstring,
      algosToReject = cms.required.vstring
    ),
    endcapCuts = cms.PSet(
      minPt = cms.double(1),
      maxDR = cms.double(0.3),
      minDR = cms.double(0),
      minDEta = cms.double(0.005),
      maxDZ = cms.double(0.1),
      maxDPtPt = cms.double(-1),
      minHits = cms.int32(8),
      minPixelHits = cms.int32(1),
      allowedQualities = cms.required.vstring,
      algosToReject = cms.required.vstring
    )
  ),
  useNumCrystals = cms.bool(True),
  etMinBarrel = cms.double(0),
  etMinEndcaps = cms.double(0.11),
  etMinHcal = cms.double(0),
  eMinBarrel = cms.double(0.095),
  eMinEndcaps = cms.double(0),
  intRadiusEcalBarrel = cms.double(3),
  intRadiusEcalEndcaps = cms.double(3),
  intRadiusHcal = cms.double(0.15),
  jurassicWidth = cms.double(1.5),
  vetoClustered = cms.bool(False),
  ctfTracksCheck = cms.bool(True),
  ctfTracksTag = cms.InputTag('generalTracks'),
  MaxElePtForOnlyMVA = cms.double(50),
  PreSelectMVA = cms.double(-0.1),
  preselection = cms.PSet(
    minSCEtBarrel = cms.double(4),
    minSCEtEndcaps = cms.double(4),
    minEOverPBarrel = cms.double(0),
    minEOverPEndcaps = cms.double(0),
    maxEOverPBarrel = cms.double(999999999),
    maxEOverPEndcaps = cms.double(999999999),
    maxDeltaEtaBarrel = cms.double(0.02),
    maxDeltaEtaEndcaps = cms.double(0.02),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiEndcaps = cms.double(0.15),
    hOverEConeSize = cms.double(0.15),
    maxHOverEBarrelCone = cms.double(0.15),
    maxHOverEEndcapsCone = cms.double(0.15),
    maxHBarrelCone = cms.double(0),
    maxHEndcapsCone = cms.double(0),
    maxHOverEBarrelBc = cms.double(0.15),
    maxHOverEEndcapsBc = cms.double(0.15),
    maxHBarrelBc = cms.double(0),
    maxHEndcapsBc = cms.double(0),
    maxSigmaIetaIetaBarrel = cms.double(999999999),
    maxSigmaIetaIetaEndcaps = cms.double(999999999),
    maxFbremBarrel = cms.double(999999999),
    maxFbremEndcaps = cms.double(999999999),
    isBarrel = cms.bool(False),
    isEndcaps = cms.bool(False),
    isFiducial = cms.bool(False),
    seedFromTEC = cms.bool(True),
    maxTIP = cms.double(999999999),
    multThresEB = cms.double(1),
    multThresEE = cms.double(1.25)
  ),
  crackCorrectionFunction = cms.string('EcalClusterCrackCorrection'),
  ecalWeightsFromDB = cms.bool(True),
  ecalRefinedRegressionWeightFiles = cms.vstring(),
  combinationWeightsFromDB = cms.bool(True),
  combinationRegressionWeightFile = cms.vstring(),
  ecalRefinedRegressionWeightLabels = cms.vstring(),
  combinationRegressionWeightLabels = cms.vstring(),
  ElecMVAFilesString = cms.vstring(
    'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_10_17Feb2011.weights.xml',
    'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_12_17Feb2011.weights.xml',
    'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_20_17Feb2011.weights.xml',
    'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_22_17Feb2011.weights.xml'
  ),
  SoftElecMVAFilesString = cms.vstring('RecoEgamma/ElectronIdentification/data/TMVA_BDTSoftElectrons_7Feb2014.weights.xml'),
  EleDNNPFid = cms.PSet(
    enabled = cms.bool(False),
    inputTensorName = cms.string('FirstLayer_input'),
    outputTensorName = cms.string('sequential/FinalLayer/Softmax'),
    outputDim = cms.uint32(5),
    modelsFiles = cms.vstring(
      'RecoEgamma/ElectronIdentification/data/Ele_PFID_dnn/lowpT/lowpT_modelDNN.pb',
      'RecoEgamma/ElectronIdentification/data/Ele_PFID_dnn/highpTEB/highpTEB_modelDNN.pb',
      'RecoEgamma/ElectronIdentification/data/Ele_PFID_dnn/highpTEE/highpTEE_modelDNN.pb'
    ),
    scalersFiles = cms.vstring(
      'RecoEgamma/ElectronIdentification/data/Ele_PFID_dnn/lowpT/lowpT_scaler.txt',
      'RecoEgamma/ElectronIdentification/data/Ele_PFID_dnn/highpTEB/highpTEB_scaler.txt',
      'RecoEgamma/ElectronIdentification/data/Ele_PFID_dnn/highpTEE/highpTEE_scaler.txt'
    ),
    useEBModelInGap = cms.bool(True)
  ),
  pfECALClusIsolCfg = cms.PSet(
    pfClusterProducer = cms.InputTag('particleFlowClusterECAL'),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0)
  ),
  pfHCALClusIsolCfg = cms.PSet(
    pfClusterProducerHCAL = cms.InputTag('particleFlowClusterHCAL'),
    pfClusterProducerHFEM = cms.InputTag(''),
    pfClusterProducerHFHAD = cms.InputTag(''),
    useHF = cms.bool(False),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0),
    useEt = cms.bool(True)
  ),
  mightGet = cms.optional.untracked.vstring
)
