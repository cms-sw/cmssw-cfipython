import FWCore.ParameterSet.Config as cms

def HGCalValidator(*args, **kwargs):
  mod = cms.EDProducer('HGCalValidator',
    ptMinCP = cms.double(0.5),
    ptMaxCP = cms.double(300),
    minRapidityCP = cms.double(-3.1),
    maxRapidityCP = cms.double(3.1),
    lipCP = cms.double(30),
    tipCP = cms.double(60),
    chargedOnlyCP = cms.bool(False),
    stableOnlyCP = cms.bool(False),
    notConvertedOnlyCP = cms.bool(True),
    pdgIdCP = cms.vint32(
      11,
      -11,
      13,
      -13,
      22,
      111,
      211,
      -211,
      321,
      -321,
      311,
      130,
      310
    ),
    signalOnlyCP = cms.bool(True),
    intimeOnlyCP = cms.bool(True),
    minHitCP = cms.int32(0),
    maxSimClustersCP = cms.int32(-1),
    histoProducerAlgoBlock = cms.PSet(
      minEta = cms.double(-4.5),
      maxEta = cms.double(4.5),
      nintEta = cms.int32(100),
      useFabsEta = cms.bool(False),
      minEne = cms.double(0),
      maxEne = cms.double(500),
      nintEne = cms.int32(250),
      minPt = cms.double(0),
      maxPt = cms.double(100),
      nintPt = cms.int32(100),
      minPhi = cms.double(-3.2),
      maxPhi = cms.double(3.2),
      nintPhi = cms.int32(80),
      minMixedHitsSimCluster = cms.double(0),
      maxMixedHitsSimCluster = cms.double(800),
      nintMixedHitsSimCluster = cms.int32(100),
      minMixedHitsCluster = cms.double(0),
      maxMixedHitsCluster = cms.double(800),
      nintMixedHitsCluster = cms.int32(100),
      minEneCl = cms.double(0),
      maxEneCl = cms.double(110),
      nintEneCl = cms.int32(110),
      minLongDepBary = cms.double(0),
      maxLongDepBary = cms.double(110),
      nintLongDepBary = cms.int32(110),
      minZpos = cms.double(-550),
      maxZpos = cms.double(550),
      nintZpos = cms.int32(1100),
      minTotNsimClsperlay = cms.double(0),
      maxTotNsimClsperlay = cms.double(50),
      nintTotNsimClsperlay = cms.int32(50),
      minTotNClsperlay = cms.double(0),
      maxTotNClsperlay = cms.double(50),
      nintTotNClsperlay = cms.int32(50),
      minEneClperlay = cms.double(0),
      maxEneClperlay = cms.double(110),
      nintEneClperlay = cms.int32(110),
      minScore = cms.double(0),
      maxScore = cms.double(1.02),
      nintScore = cms.int32(51),
      minSharedEneFrac = cms.double(0),
      maxSharedEneFrac = cms.double(1.02),
      nintSharedEneFrac = cms.int32(51),
      minTSTSharedEneFracEfficiency = cms.double(0.5),
      minTSTSharedEneFrac = cms.double(0),
      maxTSTSharedEneFrac = cms.double(1.01),
      nintTSTSharedEneFrac = cms.int32(101),
      minTotNsimClsperthick = cms.double(0),
      maxTotNsimClsperthick = cms.double(800),
      nintTotNsimClsperthick = cms.int32(100),
      minTotNClsperthick = cms.double(0),
      maxTotNClsperthick = cms.double(800),
      nintTotNClsperthick = cms.int32(100),
      minTotNcellsperthickperlayer = cms.double(0),
      maxTotNcellsperthickperlayer = cms.double(500),
      nintTotNcellsperthickperlayer = cms.int32(100),
      minDisToSeedperthickperlayer = cms.double(0),
      maxDisToSeedperthickperlayer = cms.double(300),
      nintDisToSeedperthickperlayer = cms.int32(100),
      minDisToSeedperthickperlayerenewei = cms.double(0),
      maxDisToSeedperthickperlayerenewei = cms.double(10),
      nintDisToSeedperthickperlayerenewei = cms.int32(50),
      minDisToMaxperthickperlayer = cms.double(0),
      maxDisToMaxperthickperlayer = cms.double(300),
      nintDisToMaxperthickperlayer = cms.int32(100),
      minDisToMaxperthickperlayerenewei = cms.double(0),
      maxDisToMaxperthickperlayerenewei = cms.double(50),
      nintDisToMaxperthickperlayerenewei = cms.int32(50),
      minDisSeedToMaxperthickperlayer = cms.double(0),
      maxDisSeedToMaxperthickperlayer = cms.double(300),
      nintDisSeedToMaxperthickperlayer = cms.int32(100),
      minClEneperthickperlayer = cms.double(0),
      maxClEneperthickperlayer = cms.double(10),
      nintClEneperthickperlayer = cms.int32(100),
      minCellsEneDensperthick = cms.double(0),
      maxCellsEneDensperthick = cms.double(100),
      nintCellsEneDensperthick = cms.int32(200),
      minTotNTSTs = cms.double(0),
      maxTotNTSTs = cms.double(50),
      nintTotNTSTs = cms.int32(50),
      minTotNClsinTSTs = cms.double(0),
      maxTotNClsinTSTs = cms.double(400),
      nintTotNClsinTSTs = cms.int32(100),
      minTotNClsinTSTsperlayer = cms.double(0),
      maxTotNClsinTSTsperlayer = cms.double(50),
      nintTotNClsinTSTsperlayer = cms.int32(50),
      minMplofLCs = cms.double(0),
      maxMplofLCs = cms.double(20),
      nintMplofLCs = cms.int32(20),
      minSizeCLsinTSTs = cms.double(0),
      maxSizeCLsinTSTs = cms.double(50),
      nintSizeCLsinTSTs = cms.int32(50),
      minClEnepermultiplicity = cms.double(0),
      maxClEnepermultiplicity = cms.double(10),
      nintClEnepermultiplicity = cms.int32(10),
      minX = cms.double(-300),
      maxX = cms.double(300),
      nintX = cms.int32(100),
      minY = cms.double(-300),
      maxY = cms.double(300),
      nintY = cms.int32(100),
      minZ = cms.double(-550),
      maxZ = cms.double(550),
      nintZ = cms.int32(1100)
    ),
    hits = cms.VInputTag(
      'HGCalRecHit:HGCEERecHits',
      'HGCalRecHit:HGCHEFRecHits',
      'HGCalRecHit:HGCHEBRecHits'
    ),
    label_lcl = cms.InputTag('hgcalMergeLayerClusters'),
    label_tst = cms.VInputTag(
      'ticlTrackstersCLUE3DHigh',
      'ticlTrackstersMerge',
      'ticlSimTracksters:fromCPs',
      'ticlSimTracksters'
    ),
    label_simTS = cms.InputTag('ticlSimTracksters'),
    label_simTSFromCP = cms.InputTag('ticlSimTracksters', 'fromCPs'),
    associator = cms.untracked.InputTag('layerClusterCaloParticleAssociationProducer'),
    associatorSim = cms.untracked.InputTag('layerClusterSimClusterAssociationProducer'),
    SaveGeneralInfo = cms.untracked.bool(True),
    doCaloParticlePlots = cms.untracked.bool(True),
    doCaloParticleSelection = cms.untracked.bool(True),
    doSimClustersPlots = cms.untracked.bool(True),
    label_SimClusters = cms.InputTag('SimClusters'),
    label_SimClustersLevel = cms.InputTag('ClusterLevel'),
    doLayerClustersPlots = cms.untracked.bool(True),
    label_layerClusterPlots = cms.InputTag('hgcalMergeLayerClusters'),
    label_LCToCPLinking = cms.InputTag('LCToCP_association'),
    doTrackstersPlots = cms.untracked.bool(True),
    label_TS = cms.string('Morphology'),
    label_TSbyHitsCP = cms.string('TSbyHits_CP'),
    label_TSbyHits = cms.string('TSbyHits'),
    label_TSbyLCs = cms.string('TSbyLCs'),
    label_TSbyLCsCP = cms.string('TSbyLCs_CP'),
    simClustersToCaloParticlesMap = cms.InputTag('SimClusterToCaloParticleAssociation', 'simClusterToCaloParticleMap'),
    allTracksterTracksterAssociatorsLabels = cms.VInputTag(
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlTrackstersCLUE3DHighToticlSimTracksters',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlSimTrackstersToticlTrackstersCLUE3DHigh',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlTrackstersCLUE3DHighToticlSimTrackstersfromCPs',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlSimTrackstersfromCPsToticlTrackstersCLUE3DHigh',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlTracksterLinksToticlSimTracksters',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlSimTrackstersToticlTracksterLinks',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlTracksterLinksToticlSimTrackstersfromCPs',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlSimTrackstersfromCPsToticlTracksterLinks',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlCandidateToticlSimTracksters',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlSimTrackstersToticlCandidate',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlCandidateToticlSimTrackstersfromCPs',
      'allTrackstersToSimTrackstersAssociationsByLCs:ticlSimTrackstersfromCPsToticlCandidate'
    ),
    allTracksterTracksterByHitsAssociatorsLabels = cms.VInputTag(
      'allTrackstersToSimTrackstersAssociationsByHits:ticlTrackstersCLUE3DHighToticlSimTracksters',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlSimTrackstersToticlTrackstersCLUE3DHigh',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlTrackstersCLUE3DHighToticlSimTrackstersfromCPs',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlSimTrackstersfromCPsToticlTrackstersCLUE3DHigh',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlTracksterLinksToticlSimTracksters',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlSimTrackstersToticlTracksterLinks',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlTracksterLinksToticlSimTrackstersfromCPs',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlSimTrackstersfromCPsToticlTracksterLinks',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlCandidateToticlSimTracksters',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlSimTrackstersToticlCandidate',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlCandidateToticlSimTrackstersfromCPs',
      'allTrackstersToSimTrackstersAssociationsByHits:ticlSimTrackstersfromCPsToticlCandidate'
    ),
    doCandidatesPlots = cms.untracked.bool(True),
    ticlCandidates = cms.string('ticlCandidates'),
    ticlTrackstersMerge = cms.InputTag('ticlTrackstersMerge'),
    simTiclCandidates = cms.InputTag('ticlSimTracksters'),
    recoTracks = cms.InputTag('generalTracks'),
    mergeRecoToSimAssociator = cms.InputTag('allTrackstersToSimTrackstersAssociationsByLCs', 'ticlTrackstersMergeToticlSimTrackstersfromCPs'),
    mergeSimToRecoAssociator = cms.InputTag('allTrackstersToSimTrackstersAssociationsByLCs', 'ticlSimTrackstersfromCPsToticlTrackstersMerge'),
    cummatbudinxo = cms.FileInPath('Validation/HGCalValidation/data/D41.cumulative.xo'),
    label_cp_effic = cms.InputTag('mix', 'MergedCaloTruth'),
    label_cp_fake = cms.InputTag('mix', 'MergedCaloTruth'),
    label_scl = cms.InputTag('mix', 'MergedCaloTruth'),
    simVertices = cms.InputTag('g4SimHits'),
    LayerClustersInputMask = cms.VInputTag(
      'ticlTrackstersCLUE3DHigh',
      'ticlSimTracksters:fromCPs',
      'ticlSimTracksters'
    ),
    totallayers_to_monitor = cms.int32(52),
    thicknesses_to_monitor = cms.vint32(
      120,
      200,
      300,
      -1
    ),
    dirName = cms.string('HGCAL/HGCalValidator/'),
    isticlv5 = cms.untracked.bool(False),
    mightGet = cms.optional.untracked.vstring
  )
  for a in args:
    mod.update_(a)
  mod.update_(kwargs)
  return mod
