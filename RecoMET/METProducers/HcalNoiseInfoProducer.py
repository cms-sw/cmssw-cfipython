import FWCore.ParameterSet.Config as cms

def HcalNoiseInfoProducer(**kwargs):
  mod = cms.EDProducer('HcalNoiseInfoProducer',
    minRecHitE = cms.double(1.5),
    minLowHitE = cms.double(10),
    minHighHitE = cms.double(25),
    minR45HitE = cms.double(5),
    pMinERatio = cms.double(25),
    pMinEZeros = cms.double(5),
    pMinEEMF = cms.double(10),
    minERatio = cms.double(50),
    minEZeros = cms.double(10),
    minEEMF = cms.double(50),
    pMinE = cms.double(40),
    pMinRatio = cms.double(0.75),
    pMaxRatio = cms.double(0.85),
    pMinHPDHits = cms.int32(10),
    pMinRBXHits = cms.int32(20),
    pMinHPDNoOtherHits = cms.int32(7),
    pMinZeros = cms.int32(4),
    pMinLowEHitTime = cms.double(-6),
    pMaxLowEHitTime = cms.double(6),
    pMinHighEHitTime = cms.double(-4),
    pMaxHighEHitTime = cms.double(5),
    pMaxHPDEMF = cms.double(-0.02),
    pMaxRBXEMF = cms.double(0.02),
    pMinRBXRechitR45Count = cms.int32(1),
    pMinRBXRechitR45Fraction = cms.double(0.1),
    pMinRBXRechitR45EnergyFraction = cms.double(0.1),
    lMinRatio = cms.double(-999),
    lMaxRatio = cms.double(999),
    lMinHPDHits = cms.int32(17),
    lMinRBXHits = cms.int32(999),
    lMinHPDNoOtherHits = cms.int32(10),
    lMinZeros = cms.int32(10),
    lMinLowEHitTime = cms.double(-9999),
    lMaxLowEHitTime = cms.double(9999),
    lMinHighEHitTime = cms.double(-9999),
    lMaxHighEHitTime = cms.double(9999),
    tMinRatio = cms.double(-999),
    tMaxRatio = cms.double(999),
    tMinHPDHits = cms.int32(16),
    tMinRBXHits = cms.int32(50),
    tMinHPDNoOtherHits = cms.int32(9),
    tMinZeros = cms.int32(8),
    tMinLowEHitTime = cms.double(-9999),
    tMaxLowEHitTime = cms.double(9999),
    tMinHighEHitTime = cms.double(-7),
    tMaxHighEHitTime = cms.double(6),
    hlMaxHPDEMF = cms.double(-9999),
    hlMaxRBXEMF = cms.double(0.01),
    calibdigiHBHEthreshold = cms.double(15),
    calibdigiHBHEtimeslices = cms.vint32(
      3,
      4,
      5,
      6
    ),
    calibdigiHFthreshold = cms.double(-999),
    calibdigiHFtimeslices = cms.vint32(
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9
    ),
    TS4TS5EnergyThreshold = cms.double(50),
    TS4TS5UpperThreshold = cms.vdouble(
      70,
      90,
      100,
      400,
      4000
    ),
    TS4TS5UpperCut = cms.vdouble(
      1,
      0.8,
      0.75,
      0.72,
      0.72
    ),
    TS4TS5LowerThreshold = cms.vdouble(
      100,
      120,
      150,
      200,
      300,
      400,
      500
    ),
    TS4TS5LowerCut = cms.vdouble(
      -1,
      -0.7,
      -0.4,
      -0.2,
      -0.08,
      0,
      0.1
    ),
    lRBXRecHitR45Cuts = cms.vdouble(
      0,
      1,
      0,
      -0.5,
      0,
      0,
      1,
      -0.5
    ),
    tRBXRecHitR45Cuts = cms.vdouble(
      0,
      1,
      0,
      -0.2,
      0,
      0,
      1,
      -0.2
    ),
    laserMonCBoxList = cms.vint32(
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ),
    laserMonIPhiList = cms.vint32(
      23,
      22,
      21,
      20,
      19,
      18,
      17,
      16,
      15,
      14,
      13,
      12,
      11,
      10,
      9,
      8,
      7,
      6,
      5,
      4,
      3,
      2,
      1,
      0
    ),
    laserMonIEtaList = cms.vint32(
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ),
    laserMonTSStart = cms.int32(0),
    laserMonTSEnd = cms.int32(-1),
    laserMonSamples = cms.uint32(4),
    fillDigis = cms.bool(True),
    fillRecHits = cms.bool(True),
    fillCaloTowers = cms.bool(True),
    fillTracks = cms.bool(True),
    fillLaserMonitor = cms.bool(True),
    maxProblemRBXs = cms.int32(72),
    maxCaloTowerIEta = cms.int32(20),
    maxTrackEta = cms.double(2),
    minTrackPt = cms.double(1),
    maxNHF = cms.double(0.9),
    maxjetindex = cms.int32(0),
    digiCollName = cms.string('hcalDigis'),
    recHitCollName = cms.string('hbhereco'),
    caloTowerCollName = cms.string('towerMaker'),
    trackCollName = cms.string('generalTracks'),
    jetCollName = cms.string('ak4PFJets'),
    lasermonDigis = cms.InputTag('hcalDigis', 'LASERMON'),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalRecHitFlagsToBeExcluded = cms.vint32(
      11,
      12,
      13,
      14,
      15,
      27
    ),
    mightGet = cms.optional.untracked.vstring
  )
  for k,v in kwargs.items():
    setattr(mod, k, v)
  return mod
