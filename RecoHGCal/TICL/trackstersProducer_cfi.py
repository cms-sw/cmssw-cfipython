import FWCore.ParameterSet.Config as cms

trackstersProducer = cms.EDProducer('TrackstersProducer',
  detector = cms.string('HGCAL'),
  layer_clusters = cms.InputTag('hgcalLayerClusters'),
  filtered_mask = cms.InputTag('filteredLayerClusters', 'iterationLabelGoesHere'),
  original_mask = cms.InputTag('hgcalLayerClusters', 'InitialLayerClustersMask'),
  time_layerclusters = cms.InputTag('hgcalLayerClusters', 'timeLayerCluster'),
  layer_clusters_tiles = cms.InputTag('ticlLayerTileProducer'),
  layer_clusters_hfnose_tiles = cms.InputTag('ticlLayerTileHFNose'),
  seeding_regions = cms.InputTag('ticlSeedingRegionProducer'),
  filter_on_categories = cms.vint32(0),
  pid_threshold = cms.double(0),
  energy_em_over_total_threshold = cms.double(-1),
  max_longitudinal_sigmaPCA = cms.double(9999),
  shower_start_max_layer = cms.int32(9999),
  algo_verbosity = cms.int32(0),
  min_cos_theta = cms.double(0.915),
  root_doublet_max_distance_from_seed_squared = cms.double(9999),
  min_cos_pointing = cms.double(-1),
  skip_layers = cms.int32(0),
  max_missing_layers_in_trackster = cms.int32(9999),
  etaLimitIncreaseWindow = cms.double(2.1),
  min_layers_per_trackster = cms.int32(10),
  max_delta_time = cms.double(3),
  out_in_dfs = cms.bool(True),
  max_out_in_hops = cms.int32(10),
  oneTracksterPerTrackSeed = cms.bool(False),
  promoteEmptyRegionToTrackster = cms.bool(False),
  eid_graph_path = cms.string('RecoHGCal/TICL/data/tf_models/energy_id_v0.pb'),
  eid_input_name = cms.string('input'),
  eid_output_name_energy = cms.string('output/regressed_energy'),
  eid_output_name_id = cms.string('output/id_probabilities'),
  itername = cms.string('unknown'),
  eid_min_cluster_energy = cms.double(1),
  eid_n_layers = cms.int32(50),
  eid_n_clusters = cms.int32(10),
  mightGet = cms.optional.untracked.vstring
)
