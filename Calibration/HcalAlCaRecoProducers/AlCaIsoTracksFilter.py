import FWCore.ParameterSet.Config as cms

def AlCaIsoTracksFilter(**kwargs):
  mod = cms.EDFilter('AlCaIsoTracksFilter',
    labelTrack = cms.InputTag('generalTracks'),
    labelVertex = cms.InputTag('offlinePrimaryVertices'),
    labelBeamSpot = cms.InputTag('offlineBeamSpot'),
    labelEBRecHit = cms.InputTag('ecalRecHit', 'EcalRecHitsEB'),
    labelEERecHit = cms.InputTag('ecalRecHit', 'EcalRecHitsEE'),
    labelHBHERecHit = cms.InputTag('hbhereco'),
    labelTriggerEvent = cms.InputTag('hltTriggerSummaryAOD', '', 'HLT'),
    labelTriggerResult = cms.InputTag('TriggerResults', '', 'HLT'),
    triggers = cms.vstring(),
    processName = cms.string('HLT'),
    trackQuality = cms.string('highPurity'),
    minTrackPt = cms.double(1),
    maxDxyPV = cms.double(10),
    maxDzPV = cms.double(100),
    maxChi2 = cms.double(5),
    maxDpOverP = cms.double(0.1),
    minOuterHit = cms.int32(4),
    minLayerCrossed = cms.int32(8),
    maxInMiss = cms.int32(2),
    maxOutMiss = cms.int32(2),
    coneRadius = cms.double(34.98),
    minimumTrackP = cms.double(20),
    coneRadiusMIP = cms.double(14),
    maximumEcalEnergy = cms.double(100),
    maxTrackP = cms.double(8),
    slopeTrackP = cms.double(0.05090504066),
    isolationEnergy = cms.double(10),
    EBHitEnergyThreshold = cms.double(0.08),
    EEHitEnergyThreshold0 = cms.double(0.3),
    EEHitEnergyThreshold1 = cms.double(0),
    EEHitEnergyThreshold2 = cms.double(0),
    EEHitEnergyThreshold3 = cms.double(0),
    EEHitEnergyThresholdLow = cms.double(0.3),
    EEHitEnergyThresholdHigh = cms.double(0.3),
    momentumRangeLow = cms.double(20),
    momentumRangeHigh = cms.double(40),
    preScaleFactor = cms.int32(10),
    momentumHigh = cms.double(60),
    preScaleHigh = cms.int32(5),
    debugEvents = cms.vint32(),
    usePFThreshold = cms.bool(True),
    mightGet = cms.optional.untracked.vstring
  )
  for k,v in kwargs.items():
    setattr(mod, k, v)
  return mod
